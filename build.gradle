buildscript {
    ext {
        kotlin_version = '1.4.30'
        junit_version = '4.12'
        mockito_version = '3.0.0'
        jgoodies_version = '1.6.0'
        json_version = '20180813'
        commonsio_version = '2.6'
        apache_commons_version = '3.0'
    }

    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id 'com.adarshr.test-logger' version '1.7.0'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
    afterEvaluate {
        // Exclude files that cannot be tested by jUnit (UI, Swing, ...)
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/tibagni/logviewer/LogViewerView*',
                    'com/tibagni/logviewer/ServiceLocator*',
                    'com/tibagni/logviewer/AppInfo*',
                    'com/tibagni/logviewer/about/AboutDialog*',
                    'com/tibagni/logviewer/filter/EditFilterDialog*',
                    'com/tibagni/logviewer/filter/FiltersList*',
                    'com/tibagni/logviewer/filter/FilterCellRenderer*',
                    'com/tibagni/logviewer/filter/regex/RegexEditorDialog*',
                    'com/tibagni/logviewer/log/LogCellRenderer*',
                    'com/tibagni/logviewer/logger/*',
                    'com/tibagni/logviewer/lookandfeel/*',
                    'com/tibagni/logviewer/preferences/LogViewerPreferencesDialog*',
                    'com/tibagni/logviewer/updates/UpdateAvailableDialog*',
                    'com/tibagni/logviewer/util/SwingUtils*',
                    'com/tibagni/logviewer/view/*'
            ])
        }))
    }
}

def props = new Properties()
file("src/main/resources/properties/app.properties").withInputStream { props.load(it) }

version props.getProperty("version")

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'libs'
    }
}

jar {
    manifest {
        attributes(
                'Built-By'       : System.properties['user.name'],
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                'Main-Class'     : "com.tibagni.logviewer.LogViewerApplication",
                'SplashScreen-Image' : "Images/splash.gif"
        )
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: "$junit_version"
    testCompile "org.mockito:mockito-core:$mockito_version"
    compile group: 'com.jgoodies', name: 'jgoodies-forms', version: "$jgoodies_version"
    compile group: 'org.json', name: 'json', version: "$json_version"
    compile group: 'commons-io', name: 'commons-io', version: "$commonsio_version"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "$apache_commons_version"
    implementation 'com.formdev:flatlaf:0.46'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
